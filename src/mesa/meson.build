# Copyright Â© 2017 Intel Corporation

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

subdir('program')
subdir('main')

# files shared between classic mesa and gallium mesa
files_libmesa_common = files(
  'program/arbprogparse.c',
  'program/ir_to_mesa.cpp',
  'program/prog_cache.c',
  'program/prog_execute.c',
  'program/prog_instruction.c',
  'program/prog_noise.c',
  'program/prog_opt_constant_fold.c',
  'program/prog_optimize.c',
  'program/prog_parameter.c',
  'program/prog_parameter_layout.c',
  'program/prog_print.c',
  'program/program.c',
  'program/programopt.c',
  'program/program_parse_extra.c',
  'program/prog_statevars.c',
  'program/symbol_table.c',
  'program/prog_to_nir.c',
  'main/accum.c',
  'main/api_arrayelt.c',
  'main/api_loopback.c',
  'main/arbprogram.c',
  'main/arrayobj.c',
  'main/atifragshader.c',
  'main/attrib.c',
  'main/barrier.c',
  'main/bbox.c',
  'main/blend.c',
  'main/blit.c',
  'main/bufferobj.c',
  'main/buffers.c',
  'main/clear.c',
  'main/clip.c',
  'main/colortab.c',
  'main/compute.c',
  'main/condrender.c',
  'main/conservativeraster.c',
  'main/context.c',
  'main/convolve.c',
  'main/copyimage.c',
  'main/cpuinfo.c',
  'main/debug.c',
  'main/debug_output.c',
  'main/depth.c',
  'main/dlist.c',
  'main/drawpix.c',
  'main/drawtex.c',
  'main/draw_validate.c',
  'main/enable.c',
  'main/errors.c',
  'main/eval.c',
  'main/execmem.c',
  'main/extensions.c',
  'main/extensions_table.c',
  'main/externalobjects.c',
  'main/fbobject.c',
  'main/feedback.c',
  'main/ff_fragment_shader.cpp',
  'main/ffvertex_prog.c',
  'main/fog.c',
  'main/formatquery.c',
  'main/formats.c',
  'main/format_utils.c',
  'main/framebuffer.c',
  'main/get.c',
  'main/genmipmap.c',
  'main/getstring.c',
  'main/glformats.c',
  'main/glspirv.c',
  'main/glthread.c',
  'main/hash.c',
  'main/hint.c',
  'main/histogram.c',
  'main/image.c',
  'main/imports.c',
  'main/light.c',
  'main/lines.c',
  'main/marshal.c',
  'main/matrix.c',
  'main/mipmap.c',
  'main/mm.c',
  'main/multisample.c',
  'main/objectlabel.c',
  'main/objectpurge.c',
  'main/pack.c',
  'main/pbo.c',
  'main/performance_monitor.c',
  'main/performance_query.c',
  'main/pipelineobj.c',
  'main/pixel.c',
  'main/pixelstore.c',
  'main/pixeltransfer.c',
  'main/points.c',
  'main/polygon.c',
  'main/program_binary.c',
  'main/program_resource.c',
  'main/querymatrix.c',
  'main/queryobj.c',
  'main/rastpos.c',
  'main/readpix.c',
  'main/remap.c',
  'main/renderbuffer.c',
  'main/robustness.c',
  'main/samplerobj.c',
  'main/scissor.c',
  'main/shaderapi.c',
  'main/shaderimage.c',
  'main/shaderobj.c',
  'main/shader_query.cpp',
  'main/shared.c',
  'main/state.c',
  'main/stencil.c',
  'main/syncobj.c',
  'main/texcompress.c',
  'main/texcompress_bptc.c',
  'main/texcompress_cpal.c',
  'main/texcompress_etc.c',
  'main/texcompress_fxt1.c',
  'main/texcompress_rgtc.c',
  'main/texcompress_s3tc.c',
  'main/texenv.c',
  'main/texformat.c',
  'main/texgen.c',
  'main/texgetimage.c',
  'main/teximage.c',
  'main/texobj.c',
  'main/texparam.c',
  'main/texstate.c',
  'main/texstorage.c',
  'main/texstore.c',
  'main/texturebindless.c',
  'main/textureview.c',
  'main/transformfeedback.c',
  'main/uniform_query.cpp',
  'main/uniforms.c',
  'main/varray.c',
  'main/vdpau.c',
  'main/version.c',
  'main/viewport.c',
  'main/vtxfmt.c',
  'main/es1_conversion.c',
  'math/m_debug_clip.c',
  'math/m_debug_norm.c',
  'math/m_debug_xform.c',
  'math/m_eval.c',
  'math/m_matrix.c',
  'math/m_translate.c',
  'math/m_vector.c',
  'vbo/vbo_context.c',
  'vbo/vbo_exec_api.c',
  'vbo/vbo_exec_array.c',
  'vbo/vbo_exec.c',
  'vbo/vbo_exec_draw.c',
  'vbo/vbo_exec_eval.c',
  'vbo/vbo_minmax_index.c',
  'vbo/vbo_noop.c',
  'vbo/vbo_primitive_restart.c',
  'vbo/vbo_save_api.c',
  'vbo/vbo_save.c',
  'vbo/vbo_save_draw.c',
  'vbo/vbo_save_loopback.c',
  'x86/common_x86.c',
)

# mesa files
files_libmesa_classic = files(
  'math/m_xform.c',
  'tnl/t_context.c',
  'tnl/t_draw.c',
  'tnl/t_pipeline.c',
  'tnl/t_rebase.c',
  'tnl/t_split.c',
  'tnl/t_split_copy.c',
  'tnl/t_split_inplace.c',
  'tnl/t_vb_fog.c',
  'tnl/t_vb_light.c',
  'tnl/t_vb_normals.c',
  'tnl/t_vb_points.c',
  'tnl/t_vb_program.c',
  'tnl/t_vb_render.c',
  'tnl/t_vb_texgen.c',
  'tnl/t_vb_texmat.c',
  'tnl/t_vb_vertex.c',
  'tnl/t_vertex.c',
  'tnl/t_vertex_generic.c',
  'tnl/t_vertex_sse.c',
  'tnl/t_vp_build.c',
  'swrast/s_aaline.c',
  'swrast/s_aatriangle.c',
  'swrast/s_alpha.c',
  'swrast/s_atifragshader.c',
  'swrast/s_bitmap.c',
  'swrast/s_blend.c',
  'swrast/s_blit.c',
  'swrast/s_clear.c',
  'swrast/s_context.c',
  'swrast/s_copypix.c',
  'swrast/s_depth.c',
  'swrast/s_drawpix.c',
  'swrast/s_feedback.c',
  'swrast/s_fog.c',
  'swrast/s_fragprog.c',
  'swrast/s_lines.c',
  'swrast/s_logic.c',
  'swrast/s_masking.c',
  'swrast/s_points.c',
  'swrast/s_renderbuffer.c',
  'swrast/s_span.c',
  'swrast/s_stencil.c',
  'swrast/s_texcombine.c',
  'swrast/s_texfetch.c',
  'swrast/s_texfilter.c',
  'swrast/s_texrender.c',
  'swrast/s_texture.c',
  'swrast/s_triangle.c',
  'swrast/s_zoom.c',
  'swrast_setup/ss_context.c',
  'swrast_setup/ss_triangle.c',
  'drivers/common/driverfuncs.c',
  'drivers/common/meta_blit.c',
  'drivers/common/meta_generate_mipmap.c',
  'drivers/common/meta.c',
  'x86/x86_xform.c',
  'x86/3dnow.c',
  'x86/sse.c',
  'x86/rtasm/x86sse.c',
  'sparc/sparc.c',
  'x86-64/x86-64.c',
)

files_libmesa_gallium = files(
  'state_tracker/st_atifs_to_tgsi.c',
  'state_tracker/st_atom_array.c',
  'state_tracker/st_atom_atomicbuf.c',
  'state_tracker/st_atom_blend.c',
  'state_tracker/st_atom.c',
  'state_tracker/st_atom_clip.c',
  'state_tracker/st_atom_constbuf.c',
  'state_tracker/st_atom_depth.c',
  'state_tracker/st_atom_framebuffer.c',
  'state_tracker/st_atom_image.c',
  'state_tracker/st_atom_msaa.c',
  'state_tracker/st_atom_pixeltransfer.c',
  'state_tracker/st_atom_rasterizer.c',
  'state_tracker/st_atom_sampler.c',
  'state_tracker/st_atom_scissor.c',
  'state_tracker/st_atom_shader.c',
  'state_tracker/st_atom_stipple.c',
  'state_tracker/st_atom_storagebuf.c',
  'state_tracker/st_atom_tess.c',
  'state_tracker/st_atom_texture.c',
  'state_tracker/st_atom_viewport.c',
  'state_tracker/st_cb_bitmap.c',
  'state_tracker/st_cb_bitmap_shader.c',
  'state_tracker/st_cb_blit.c',
  'state_tracker/st_cb_bufferobjects.c',
  'state_tracker/st_cb_clear.c',
  'state_tracker/st_cb_compute.c',
  'state_tracker/st_cb_condrender.c',
  'state_tracker/st_cb_copyimage.c',
  'state_tracker/st_cb_drawpixels.c',
  'state_tracker/st_cb_drawpixels_shader.c',
  'state_tracker/st_cb_drawtex.c',
  'state_tracker/st_cb_eglimage.c',
  'state_tracker/st_cb_fbo.c',
  'state_tracker/st_cb_feedback.c',
  'state_tracker/st_cb_flush.c',
  'state_tracker/st_cb_memoryobjects.c',
  'state_tracker/st_cb_msaa.c',
  'state_tracker/st_cb_perfmon.c',
  'state_tracker/st_cb_program.c',
  'state_tracker/st_cb_queryobj.c',
  'state_tracker/st_cb_rasterpos.c',
  'state_tracker/st_cb_readpixels.c',
  'state_tracker/st_cb_strings.c',
  'state_tracker/st_cb_semaphoreobjects.c',
  'state_tracker/st_cb_syncobj.c',
  'state_tracker/st_cb_texturebarrier.c',
  'state_tracker/st_cb_texture.c',
  'state_tracker/st_cb_viewport.c',
  'state_tracker/st_cb_xformfb.c',
  'state_tracker/st_context.c',
  'state_tracker/st_copytex.c',
  'state_tracker/st_debug.c',
  'state_tracker/st_draw.c',
  'state_tracker/st_draw_feedback.c',
  'state_tracker/st_extensions.c',
  'state_tracker/st_format.c',
  'state_tracker/st_gen_mipmap.c',
  'state_tracker/st_glsl_to_nir.cpp',
  'state_tracker/st_glsl_to_tgsi.cpp',
  'state_tracker/st_glsl_to_tgsi_private.cpp',
  'state_tracker/st_glsl_to_tgsi_temprename.cpp',
  'state_tracker/st_glsl_types.cpp',
  'state_tracker/st_manager.c',
  'state_tracker/st_mesa_to_tgsi.c',
  'state_tracker/st_nir_lower_builtin.c',
  'state_tracker/st_nir_lower_tex_src_plane.c',
  'state_tracker/st_nir_lower_uniforms_to_ubo.c',
  'state_tracker/st_pbo.c',
  'state_tracker/st_program.c',
  'state_tracker/st_sampler_view.c',
  'state_tracker/st_scissor.c',
  'state_tracker/st_shader_cache.c',
  'state_tracker/st_texture.c',
  'state_tracker/st_tgsi_lower_yuv.c',
  'state_tracker/st_vdpau.c',
)

matypes_h = []
if with_asm_arch == 'x86' or with_asm_arch == 'x86_64'
  gen_matypes = executable(
    'gen_matypes',
    'x86/gen_matypes.c',
    c_args : [c_vis_args, c_msvc_compat_args],
    include_directories : inc_common,
  )
  matypes_h = custom_target(
    'matypes.h',
    output : 'matypes.h',
    command : [gen_matypes],
    capture : true,
  )
endif
if with_asm_arch == 'x86'
  files_libmesa_common += files(
    'x86/assyntax.h',
    'x86/clip_args.h',
    'x86/norm_args.h',
    'x86/xform_args.h',
    'x86/common_x86_asm.S',
    'x86/common_x86_asm.h',
    'x86/common_x86_features.h',
    'x86/x86_xform.h',
    'x86/x86_xform2.S',
    'x86/x86_xform3.S',
    'x86/x86_xform4.S',
    'x86/x86_cliptest.S',
    'x86/mmx.h',
    'x86/mmx_blend.S',
    'x86/mmx_blendtmp.h',
    'x86/3dnow.h',
    'x86/3dnow_xform1.S',
    'x86/3dnow_xform2.S',
    'x86/3dnow_xform3.S',
    'x86/3dnow_xform4.S',
    'x86/sse.h',
    'x86/sse_xform1.S',
    'x86/sse_xform2.S',
    'x86/sse_xform3.S',
    'x86/sse_xform4.S',
    'x86/sse_normal.S',
    'x86/read_rgba_span_x86.S',
  )
elif with_asm_arch == 'x86_64'
  files_libmesa_common += files('x86-64/x86-64.h', 'x86-64/xform4.S')
endif
# TODO: sparc

format_fallback_c = custom_target(
  'format_fallback.c',
  input : ['main/format_fallback.py', 'main/formats.csv'],
  output : 'format_fallback.c',
  command : [prog_python2, '@INPUT0@', '@INPUT1@', '@OUTPUT@'],
  depend_files : files('main/format_parser.py'),
)

get_hash_h = custom_target(
  'get_hash.h',
  input : ['main/get_hash_generator.py', gl_and_es_api_files],
  output : 'get_hash.h',
  command : [prog_python2, '@INPUT0@', '-f', '@INPUT1@'],
  depend_files : files('main/get_hash_params.py'),
  capture : true,
)

foreach x : [['format_info.h', 'format_info.py'],
             ['format_pack.c', 'format_pack.py'],
             ['format_unpack.c', 'format_unpack.py']]
  files_libmesa_common += custom_target(
    x[0],
    input : ['main/@0@'.format(x[1]), 'main/formats.csv'],
    output : x[0],
    command : [prog_python2, '@INPUT0@', '@INPUT1@'],
    depend_files : files('main/format_parser.py'),
    capture : true,
  )
endforeach

files_libmesa_common += [
  mesa_lex,
  program_parse_tab,
  main_api_exec_c,
  main_enums_c,
  format_fallback_c,
  get_hash_h,
  main_marshal_generated_c,
  main_marshal_generated_h,
  main_dispatch_h,
  ir_expression_operation_h,
  main_remap_helper_h,
  matypes_h,
  sha1_h,
]

if with_sse41
  libmesa_sse41 = static_library(
    'mesa_sse41',
    files('main/streaming-load-memcpy.c', 'main/sse_minmax.c'),
    c_args : [c_vis_args, c_msvc_compat_args, sse41_args],
    include_directories : inc_common,
  )
else
  libmesa_sse41 = []
endif

libmesa_classic = static_library(
  'mesa_classic',
  [files_libmesa_common, files_libmesa_classic],
  c_args : [c_vis_args, c_msvc_compat_args],
  cpp_args : [cpp_vis_args, cpp_msvc_compat_args],
  include_directories : [inc_common, include_directories('main')],
  link_with : [libglsl, libmesa_sse41],
  dependencies : idep_nir_headers,
  build_by_default : false,
)

libmesa_gallium = static_library(
  'mesa_gallium',
  [files_libmesa_common, files_libmesa_gallium],
  c_args : [c_vis_args, c_msvc_compat_args],
  cpp_args : [cpp_vis_args, cpp_msvc_compat_args],
  include_directories : [inc_common, include_directories('main')],
  link_with : [libglsl, libmesa_sse41],
  dependencies : [idep_nir_headers, dep_vdpau],
  build_by_default : false,
)

subdir('drivers/dri')
if with_osmesa == 'classic'
  subdir('drivers/osmesa')
endif
if with_glx == 'xlib'
  subdir('drivers/x11')
endif
if with_tests and dri_drivers != []
  subdir('main/tests')
endif
